'------------------------------------------------------------------------------
' <auto-generated>
'     Ce code a été généré à partir d'un modèle.
'
'     Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
'     Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class ALMS_PROD_PRDEntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=ALMS_PROD_PRDEntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property DTM_ADRE_MAC() As DbSet(Of DTM_ADRE_MAC)
    Public Overridable Property DTM_HSQR_STAT_PROD() As DbSet(Of DTM_HSQR_STAT_PROD)
    Public Overridable Property DTM_NC_DETA() As DbSet(Of DTM_NC_DETA)
    Public Overridable Property DTM_NC_LIST() As DbSet(Of DTM_NC_LIST)
    Public Overridable Property DTM_NMCT_PROD() As DbSet(Of DTM_NMCT_PROD)
    Public Overridable Property DTM_NU_SER() As DbSet(Of DTM_NU_SER)
    Public Overridable Property DTM_REF_GAMM() As DbSet(Of DTM_REF_GAMM)
    Public Overridable Property DTM_REF_GAMM_ARTI() As DbSet(Of DTM_REF_GAMM_ARTI)
    Public Overridable Property DTM_REF_ID_TEST() As DbSet(Of DTM_REF_ID_TEST)
    Public Overridable Property DTM_REF_MTRE_LIST() As DbSet(Of DTM_REF_MTRE_LIST)
    Public Overridable Property DTM_REF_OPRT() As DbSet(Of DTM_REF_OPRT)
    Public Overridable Property DTM_REF_STAT() As DbSet(Of DTM_REF_STAT)
    Public Overridable Property DTM_REF_TYPE_NU_SER() As DbSet(Of DTM_REF_TYPE_NU_SER)
    Public Overridable Property DTM_RESU_TEST_DETA() As DbSet(Of DTM_RESU_TEST_DETA)
    Public Overridable Property DTM_RESU_TEST_LIST() As DbSet(Of DTM_RESU_TEST_LIST)
    Public Overridable Property DTM_SEQU_RFRC_DETA() As DbSet(Of DTM_SEQU_RFRC_DETA)
    Public Overridable Property DTM_SEQU_RFRC_LIST() As DbSet(Of DTM_SEQU_RFRC_LIST)
    Public Overridable Property DTM_REF_ID() As DbSet(Of DTM_REF_ID)
    Public Overridable Property V_DHR_ECAR_PDTO() As DbSet(Of V_DHR_ECAR_PDTO)
    Public Overridable Property V_FCGF() As DbSet(Of V_FCGF)
    Public Overridable Property V_FCGF_ANML() As DbSet(Of V_FCGF_ANML)
    Public Overridable Property V_LIST_TCBL_NMCT_PROD() As DbSet(Of V_LIST_TCBL_NMCT_PROD)
    Public Overridable Property V_NC_LIST_CD_ARTI_TCBL_UNIT() As DbSet(Of V_NC_LIST_CD_ARTI_TCBL_UNIT)
    Public Overridable Property V_NC_LIST_INFO_NU_INCI() As DbSet(Of V_NC_LIST_INFO_NU_INCI)
    Public Overridable Property V_NC_LIST_NU_INCI_NU_SER() As DbSet(Of V_NC_LIST_NU_INCI_NU_SER)
    Public Overridable Property V_NC_LIST_PHAS_FAIL_NU_SER_ID_SEQ() As DbSet(Of V_NC_LIST_PHAS_FAIL_NU_SER_ID_SEQ)
    Public Overridable Property V_NC_LIST_PROD_RETO_PDTO() As DbSet(Of V_NC_LIST_PROD_RETO_PDTO)
    Public Overridable Property V_NC_LIST_SEQU_FAIL_NU_SER() As DbSet(Of V_NC_LIST_SEQU_FAIL_NU_SER)
    Public Overridable Property V_POST_FCGF() As DbSet(Of V_POST_FCGF)

    Public Overridable Function P_ADD_RESU_SEQ_TEST(nU_SER_SPFE As String, cD_ARTI_PROD As String, nM_RFRC_SEQU As String, nU_VERS_SEQU As Nullable(Of Byte), iD_STAT_PROD As Nullable(Of Byte), bL_STAT_PROD As Nullable(Of Boolean), nU_OF As Nullable(Of Integer), dT_TEST As Nullable(Of Date), iD_OPRT As Nullable(Of Short), rES As ObjectParameter) As Integer
        Dim nU_SER_SPFEParameter As ObjectParameter = If(nU_SER_SPFE IsNot Nothing, New ObjectParameter("NU_SER_SPFE", nU_SER_SPFE), New ObjectParameter("NU_SER_SPFE", GetType(String)))

        Dim cD_ARTI_PRODParameter As ObjectParameter = If(cD_ARTI_PROD IsNot Nothing, New ObjectParameter("CD_ARTI_PROD", cD_ARTI_PROD), New ObjectParameter("CD_ARTI_PROD", GetType(String)))

        Dim nM_RFRC_SEQUParameter As ObjectParameter = If(nM_RFRC_SEQU IsNot Nothing, New ObjectParameter("NM_RFRC_SEQU", nM_RFRC_SEQU), New ObjectParameter("NM_RFRC_SEQU", GetType(String)))

        Dim nU_VERS_SEQUParameter As ObjectParameter = If(nU_VERS_SEQU.HasValue, New ObjectParameter("NU_VERS_SEQU", nU_VERS_SEQU), New ObjectParameter("NU_VERS_SEQU", GetType(Byte)))

        Dim iD_STAT_PRODParameter As ObjectParameter = If(iD_STAT_PROD.HasValue, New ObjectParameter("ID_STAT_PROD", iD_STAT_PROD), New ObjectParameter("ID_STAT_PROD", GetType(Byte)))

        Dim bL_STAT_PRODParameter As ObjectParameter = If(bL_STAT_PROD.HasValue, New ObjectParameter("BL_STAT_PROD", bL_STAT_PROD), New ObjectParameter("BL_STAT_PROD", GetType(Boolean)))

        Dim nU_OFParameter As ObjectParameter = If(nU_OF.HasValue, New ObjectParameter("NU_OF", nU_OF), New ObjectParameter("NU_OF", GetType(Integer)))

        Dim dT_TESTParameter As ObjectParameter = If(dT_TEST.HasValue, New ObjectParameter("DT_TEST", dT_TEST), New ObjectParameter("DT_TEST", GetType(Date)))

        Dim iD_OPRTParameter As ObjectParameter = If(iD_OPRT.HasValue, New ObjectParameter("ID_OPRT", iD_OPRT), New ObjectParameter("ID_OPRT", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("P_ADD_RESU_SEQ_TEST", nU_SER_SPFEParameter, cD_ARTI_PRODParameter, nM_RFRC_SEQUParameter, nU_VERS_SEQUParameter, iD_STAT_PRODParameter, bL_STAT_PRODParameter, nU_OFParameter, dT_TESTParameter, iD_OPRTParameter, rES)
    End Function

    Public Overridable Function P_ADD_RESU_VAL_TEST(nU_SER_SPFE As String, nU_ORDR_SEQU As Nullable(Of Short), cD_ARTI_PROD As String, nM_RFRC_SEQU As String, nU_VERS_SEQU As Nullable(Of Byte), nU_LIMI_BASS As String, nU_VALE As String, lB_VALE As String, nU_LIMI_HAUT As String, iD_TEST As Nullable(Of Integer), iD_STAT_PHAS As Nullable(Of Byte), bL_STAT_PHAS As Nullable(Of Boolean), iD_POST As String, dT_TEST As Nullable(Of Date), iD_OPRT As Nullable(Of Short), nB_TT As Nullable(Of Integer), nU_TEST_PHAS As Nullable(Of Short), rES As ObjectParameter) As Integer
        Dim nU_SER_SPFEParameter As ObjectParameter = If(nU_SER_SPFE IsNot Nothing, New ObjectParameter("NU_SER_SPFE", nU_SER_SPFE), New ObjectParameter("NU_SER_SPFE", GetType(String)))

        Dim nU_ORDR_SEQUParameter As ObjectParameter = If(nU_ORDR_SEQU.HasValue, New ObjectParameter("NU_ORDR_SEQU", nU_ORDR_SEQU), New ObjectParameter("NU_ORDR_SEQU", GetType(Short)))

        Dim cD_ARTI_PRODParameter As ObjectParameter = If(cD_ARTI_PROD IsNot Nothing, New ObjectParameter("CD_ARTI_PROD", cD_ARTI_PROD), New ObjectParameter("CD_ARTI_PROD", GetType(String)))

        Dim nM_RFRC_SEQUParameter As ObjectParameter = If(nM_RFRC_SEQU IsNot Nothing, New ObjectParameter("NM_RFRC_SEQU", nM_RFRC_SEQU), New ObjectParameter("NM_RFRC_SEQU", GetType(String)))

        Dim nU_VERS_SEQUParameter As ObjectParameter = If(nU_VERS_SEQU.HasValue, New ObjectParameter("NU_VERS_SEQU", nU_VERS_SEQU), New ObjectParameter("NU_VERS_SEQU", GetType(Byte)))

        Dim nU_LIMI_BASSParameter As ObjectParameter = If(nU_LIMI_BASS IsNot Nothing, New ObjectParameter("NU_LIMI_BASS", nU_LIMI_BASS), New ObjectParameter("NU_LIMI_BASS", GetType(String)))

        Dim nU_VALEParameter As ObjectParameter = If(nU_VALE IsNot Nothing, New ObjectParameter("NU_VALE", nU_VALE), New ObjectParameter("NU_VALE", GetType(String)))

        Dim lB_VALEParameter As ObjectParameter = If(lB_VALE IsNot Nothing, New ObjectParameter("LB_VALE", lB_VALE), New ObjectParameter("LB_VALE", GetType(String)))

        Dim nU_LIMI_HAUTParameter As ObjectParameter = If(nU_LIMI_HAUT IsNot Nothing, New ObjectParameter("NU_LIMI_HAUT", nU_LIMI_HAUT), New ObjectParameter("NU_LIMI_HAUT", GetType(String)))

        Dim iD_TESTParameter As ObjectParameter = If(iD_TEST.HasValue, New ObjectParameter("ID_TEST", iD_TEST), New ObjectParameter("ID_TEST", GetType(Integer)))

        Dim iD_STAT_PHASParameter As ObjectParameter = If(iD_STAT_PHAS.HasValue, New ObjectParameter("ID_STAT_PHAS", iD_STAT_PHAS), New ObjectParameter("ID_STAT_PHAS", GetType(Byte)))

        Dim bL_STAT_PHASParameter As ObjectParameter = If(bL_STAT_PHAS.HasValue, New ObjectParameter("BL_STAT_PHAS", bL_STAT_PHAS), New ObjectParameter("BL_STAT_PHAS", GetType(Boolean)))

        Dim iD_POSTParameter As ObjectParameter = If(iD_POST IsNot Nothing, New ObjectParameter("ID_POST", iD_POST), New ObjectParameter("ID_POST", GetType(String)))

        Dim dT_TESTParameter As ObjectParameter = If(dT_TEST.HasValue, New ObjectParameter("DT_TEST", dT_TEST), New ObjectParameter("DT_TEST", GetType(Date)))

        Dim iD_OPRTParameter As ObjectParameter = If(iD_OPRT.HasValue, New ObjectParameter("ID_OPRT", iD_OPRT), New ObjectParameter("ID_OPRT", GetType(Short)))

        Dim nB_TTParameter As ObjectParameter = If(nB_TT.HasValue, New ObjectParameter("NB_TT", nB_TT), New ObjectParameter("NB_TT", GetType(Integer)))

        Dim nU_TEST_PHASParameter As ObjectParameter = If(nU_TEST_PHAS.HasValue, New ObjectParameter("NU_TEST_PHAS", nU_TEST_PHAS), New ObjectParameter("NU_TEST_PHAS", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("P_ADD_RESU_VAL_TEST", nU_SER_SPFEParameter, nU_ORDR_SEQUParameter, cD_ARTI_PRODParameter, nM_RFRC_SEQUParameter, nU_VERS_SEQUParameter, nU_LIMI_BASSParameter, nU_VALEParameter, lB_VALEParameter, nU_LIMI_HAUTParameter, iD_TESTParameter, iD_STAT_PHASParameter, bL_STAT_PHASParameter, iD_POSTParameter, dT_TESTParameter, iD_OPRTParameter, nB_TTParameter, nU_TEST_PHASParameter, rES)
    End Function

    Public Overridable Function P_GET_NEW_NU_INCI(nU_INCI As ObjectParameter) As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("P_GET_NEW_NU_INCI", nU_INCI)
    End Function

    Public Overridable Function P_SAVE_NEW_TYPE_CAUS(iD_TYPE_CAUS As ObjectParameter, iD_TYPE_DEFA As Nullable(Of Byte), cD_ARTI_DFTE As String, nM_RSLT As String, iD_RFRC_SEQU_RETO As Nullable(Of Long), nU_PHAS_FCGF_RETO As Nullable(Of Short), rES As ObjectParameter) As Integer
        Dim iD_TYPE_DEFAParameter As ObjectParameter = If(iD_TYPE_DEFA.HasValue, New ObjectParameter("ID_TYPE_DEFA", iD_TYPE_DEFA), New ObjectParameter("ID_TYPE_DEFA", GetType(Byte)))

        Dim cD_ARTI_DFTEParameter As ObjectParameter = If(cD_ARTI_DFTE IsNot Nothing, New ObjectParameter("CD_ARTI_DFTE", cD_ARTI_DFTE), New ObjectParameter("CD_ARTI_DFTE", GetType(String)))

        Dim nM_RSLTParameter As ObjectParameter = If(nM_RSLT IsNot Nothing, New ObjectParameter("NM_RSLT", nM_RSLT), New ObjectParameter("NM_RSLT", GetType(String)))

        Dim iD_RFRC_SEQU_RETOParameter As ObjectParameter = If(iD_RFRC_SEQU_RETO.HasValue, New ObjectParameter("ID_RFRC_SEQU_RETO", iD_RFRC_SEQU_RETO), New ObjectParameter("ID_RFRC_SEQU_RETO", GetType(Long)))

        Dim nU_PHAS_FCGF_RETOParameter As ObjectParameter = If(nU_PHAS_FCGF_RETO.HasValue, New ObjectParameter("NU_PHAS_FCGF_RETO", nU_PHAS_FCGF_RETO), New ObjectParameter("NU_PHAS_FCGF_RETO", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("P_SAVE_NEW_TYPE_CAUS", iD_TYPE_CAUS, iD_TYPE_DEFAParameter, cD_ARTI_DFTEParameter, nM_RSLTParameter, iD_RFRC_SEQU_RETOParameter, nU_PHAS_FCGF_RETOParameter, rES)
    End Function

    Public Overridable Function P_SAVE_NEW_TYPE_NC(iD_TYPE_NC As ObjectParameter, nM_DCPO_NC As String, nU_PHAS_FCGF As Nullable(Of Short), nU_SOUS_PHAS_FCGF As Nullable(Of Short), iD_RFRC_SEQ As Nullable(Of Long), rES As ObjectParameter) As Integer
        Dim nM_DCPO_NCParameter As ObjectParameter = If(nM_DCPO_NC IsNot Nothing, New ObjectParameter("NM_DCPO_NC", nM_DCPO_NC), New ObjectParameter("NM_DCPO_NC", GetType(String)))

        Dim nU_PHAS_FCGFParameter As ObjectParameter = If(nU_PHAS_FCGF.HasValue, New ObjectParameter("NU_PHAS_FCGF", nU_PHAS_FCGF), New ObjectParameter("NU_PHAS_FCGF", GetType(Short)))

        Dim nU_SOUS_PHAS_FCGFParameter As ObjectParameter = If(nU_SOUS_PHAS_FCGF.HasValue, New ObjectParameter("NU_SOUS_PHAS_FCGF", nU_SOUS_PHAS_FCGF), New ObjectParameter("NU_SOUS_PHAS_FCGF", GetType(Short)))

        Dim iD_RFRC_SEQParameter As ObjectParameter = If(iD_RFRC_SEQ.HasValue, New ObjectParameter("ID_RFRC_SEQ", iD_RFRC_SEQ), New ObjectParameter("ID_RFRC_SEQ", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("P_SAVE_NEW_TYPE_NC", iD_TYPE_NC, nM_DCPO_NCParameter, nU_PHAS_FCGFParameter, nU_SOUS_PHAS_FCGFParameter, iD_RFRC_SEQParameter, rES)
    End Function

End Class
